version: 2
jobs:
  lint-backend:
    docker:
      - image: cimg/go:1.15.6
    steps:
      - checkout
      - run: |
          cd backend
          make code/lint
      - save_cache:
          key: go-mod-{{ checksum "./backend/go.mod"  }}
          paths:
            - "/go/pkg/"
  build-backend:
    docker:
      - image: cimg/go:1.15.6
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-{{ checksum "./backend/go.mod"  }}
      - run: |
          cd backend
          make code/build
  build-cross-backend:
    docker:
      - image: cimg/go:1.15.6
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - go-mod-{{ checksum "./backend/go.mod"  }}
      - run: |
          cd backend
          make code/build-cross
  test-backend:
    machine:
      image: ubuntu-1604:202004-01
    environment:
      GO_VERSION: "1.15.1"
      DOCKERIZE_VERSION: v0.6.0
      OS: linux
      ARCH: amd64
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-machine-{{ checksum "./backend/go.mod"  }}
      - run:
          name: install dockerize if not found in cache
          command: if \[ -f /usr/local/bin/dockerize \]; then
            echo "dockerize found; skipping installation";
            else wget   https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz;
            fi
      - run: |
          cd backend
          make setup/services
      - run: dockerize -wait tcp://localhost:8088 -timeout 5m
      - run: dockerize -wait tcp://localhost:8181 -timeout 5m
      - run: docker logs keycloak
      - run: |
          cd backend
          make test/all
      - run: |
          cd backend
          make test/coverage
          mv coverage.html /tmp/artifacts
      - store_artifacts:
          path: /tmp/artifacts
      - run: go get -u github.com/mattn/goveralls
      - run: |-
          export PATH=$GOBIN:$PATH
          cd backend
          goveralls -coverprofile=c.out -service=circle-ci -repotoken=$COVERALLS_TOKEN
      - save_cache:
          key: go-mod-machine-{{ checksum "go.mod"  }}
          paths:
            - "/home/circleci/go/pkg"
  lint-ui:
    docker:
      - image: cimg/node:15.14.0
    steps:
      - checkout
      - run: |
          cd ui
          yarn
          yarn lint
      - save_cache:
          key: npm-{{ checksum "./ui/yarn.lock"  }}
          paths:
            - "./node_modules/"
  build-ui:
    docker:
      - image: cimg/node:15.14.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-{{ checksum "./ui/yarn.lock"  }}
      - run: |
          cd ui
          yarn
          yarn build
workflows:
  version: 2
  project:
    jobs:
      - lint-backend
      - build-backend:
          requires:
            - lint-backend
      - build-cross-backend:
          requires:
            - lint-backend
      - test-backend:
          requires:
            - lint-backend
      - lint-ui
      - build-ui:
          requires:
            - lint-ui
